generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          String @id @default(cuid())
  description String
  imageUrl    String @map("image_url")
  name        String
  price       Int
  tag         String

  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  cartItem  CartItem[]

  @@map("products")
}

model Cart {
  id        String     @id @default(cuid())
  items     CartItem[]
  userId    String?    @map("user_id")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("carts")
}

model CartItem {
  id        String  @id @default(cuid())
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  dimension String

  cartId String @map("cart_id")
  cart   Cart   @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@map("cartitems")
}

model User {
  id     String  @id
  name   String
  image  String  @default("https://ljcwvpublqnhcfwtbjli.supabase.co/storage/v1/object/public/images/user.png")
  admins Admins?
  Order  Order[]

  @@map("user")
}

model Order {
  id String @id @default(cuid())

  nameFirst      String
  nameLast       String
  email          String
  phone          String
  address        String
  addressCity    String
  addressState   String
  addressPostal  String
  addressCountry String

  productIds String[]

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("orders")
}

model Admins {
  id   String @id
  user User   @relation(fields: [id], references: [id])

  @@map("admins")
}
